# Generated by Django 5.1.2 on 2024-10-20 17:41

import django.core.validators
import sitetour.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Booking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('participants', models.IntegerField(validators=[django.core.validators.MinValueValidator(1, message='Минимум 1 участник')], verbose_name='Число участников')),
                ('total_price', models.FloatField(validators=[django.core.validators.MinValueValidator(2, message='Минимум 1 рубль'), django.core.validators.MaxValueValidator(1000000, message='максимум 1000000')], verbose_name='Итоговая цена')),
                ('status', models.CharField(choices=[('VTMN', 'Ожидает оплаты'), ('PAID', 'Оплачено'), ('NTPD', 'Не оплачено')], default='VTMN', max_length=4, verbose_name='Статус')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Время создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Время изменения')),
                ('slug', models.SlugField(default='')),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=100, unique=True, validators=[django.core.validators.MinLengthValidator(2, message='Минимум 2 символа')], verbose_name='Название')),
                ('description', models.TextField(blank=True, max_length=300, null=True, validators=[django.core.validators.MinLengthValidator(2, message='Минимум 2 символа')], verbose_name='Описание')),
                ('slug', models.SlugField(default='')),
            ],
        ),
        migrations.CreateModel(
            name='Guide',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, validators=[django.core.validators.MinLengthValidator(2, message='Минимум 2 символа')], verbose_name='Название')),
                ('surname', models.CharField(max_length=100, validators=[django.core.validators.MinLengthValidator(2, message='Минимум 2 символа')], verbose_name='Фамилия')),
                ('phone', models.CharField(validators=[sitetour.validators.validate_phone_number], verbose_name='Телефон')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, validators=[sitetour.validators.validate_email], verbose_name='Email')),
                ('bio', models.TextField(blank=True, max_length=300, null=True, validators=[django.core.validators.MinLengthValidator(2, message='Минимум 2 символа')], verbose_name='Описание')),
                ('photo', models.ImageField(blank=True, default=None, null=True, upload_to='guides', verbose_name='Фото')),
                ('slug', models.SlugField(default='')),
            ],
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=100, unique=True, validators=[django.core.validators.MinLengthValidator(2, message='Минимум 2 символа')], verbose_name='Название')),
                ('address', models.CharField(blank=True, max_length=150, null=True, validators=[django.core.validators.MinLengthValidator(2, message='Минимум 2 символа')], verbose_name='Адрес')),
                ('description', models.TextField(blank=True, max_length=300, null=True, validators=[django.core.validators.MinLengthValidator(2, message='Минимум 2 символа')], verbose_name='Описание')),
                ('photo', models.ImageField(blank=True, default=None, null=True, upload_to='locations', verbose_name='Фото')),
                ('slug', models.SlugField(default='')),
            ],
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField(max_length=300, validators=[django.core.validators.MinLengthValidator(2, message='Минимум 2 символа')], verbose_name='Комментарий')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Время создания')),
            ],
        ),
        migrations.CreateModel(
            name='Tour',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(db_index=True, max_length=100, validators=[django.core.validators.MinLengthValidator(2, message='Минимум 2 символа')], verbose_name='Название')),
                ('description', models.TextField(max_length=300, validators=[django.core.validators.MinLengthValidator(2, message='Минимум 2 символа')], verbose_name='Описание')),
                ('duration', models.IntegerField(validators=[django.core.validators.MinValueValidator(2, message='Минимум 1 час'), django.core.validators.MaxValueValidator(100, message='максимум 100 часов')], verbose_name='Длительность')),
                ('price', models.FloatField(validators=[django.core.validators.MinValueValidator(1, message='Минимум 1 рубль'), django.core.validators.MaxValueValidator(1000000, message='максимум 1000000')], verbose_name='Цена')),
                ('max_participants', models.IntegerField(validators=[django.core.validators.MinValueValidator(1, message='Минимум 1 участник'), django.core.validators.MaxValueValidator(100, message='максимум 100 часов')], verbose_name='Максимальное число участников')),
                ('start_datetime', models.DateTimeField(verbose_name='Дата и время начала')),
                ('end_datetime', models.DateTimeField(verbose_name='Дата и время окончания')),
                ('status', models.CharField(choices=[('ACT', 'Активна'), ('CAN', 'Отменена'), ('END', 'Завершена')], default='ACT', max_length=3, verbose_name='Статус')),
                ('slug', models.SlugField(default='')),
            ],
        ),
    ]
